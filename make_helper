#! /bin/sh

BUILDER=${BUILDER:-cmake}
QTDIR=/usr/lib/qt
VERBOSE=1
CMAKE_OPTIONS="-DWANT_DEBUG=1 -DWANT_SHARED=1 -DWANT_JACK=1 -DWANT_ALSA=1 -DWANT_LIBARCHIVE=1"
CMAKE_OPTIONS="${CMAKE_OPTIONS} -DWANT_PORTAUDIO=1 -DWANT_LASH=1 -DWANT_LRDF=1 -DWANT_FLAC=0"
CMAKE_OPTIONS_="${CMAKE_OPTIONS} -DWANT_OSS=1 -DWANT_COREAUDIO=1 -DWANT_COREMIDI=1 -DWANT_PORTMIDI=1"

find . -name '*~' -exec rm '{}' \;
rm libs/hydrogen/include/hydrogen/config.h 2>/dev/null

function scons_clean () {
    echo -e " * clean scons files\n"
    rm -fr scache.conf scons_cache .sconf_temp .sconsign.dblite qt4.pyc config.log hydrogen libhydrogen.a
}

function scons_rm () {
    scons_clean
    echo -e " * rm scons files\n"
    find -name '*.a' -exec rm '{}' \;
    find -name '*.o' -exec rm '{}' \;
    find -name 'ui_*' -exec rm '{}' \;
    find -name 'moc_*' -exec rm '{}' \;
}

function scons_make () {
    echo -e " * scons make\n" && scons
}

function scons_help () {
    echo -e " * scons make\n" && scons
}

function cmake_clean () {
    echo -e " * clean cmake files\n" && rm build/CMakeCache.txt 2>/dev/null
}

function cmake_rm () {
    echo -e " * rm cmake files\n" && rm -fr build 2>/dev/null
}

function cmake_make () {
    echo -e " * cmake make\n"
    if [ ! -d build ]; then
        mkdir build
    fi
    cd build && cmake ${CMAKE_OPTIONS} .. && VERBOSE=$VERBOSE make
}

function cmake_help () {
    echo -e " * cmake make\n"
    if [ ! -d build ]; then
        mkdir build
    fi
    cd build && cmake -L ..
}


echo -e "used builder : ${BUILDER}"

for arg in $@; do
    case $arg in
        "clean")
            cmd="${BUILDER}_${arg}"
            ;;
        "rm")
            cmd="${BUILDER}_${arg}"
            ;;
        "make")
            cmd="${BUILDER}_${arg}"
            ;;
        "help")
            cmd="${BUILDER}_${arg}"
            ;;
        *)
         echo "" exit 1
     esac
     $cmd
done
#grep -l -R SUPPORT gui/ | xargs sed -i -e 's/ \(.*\)_SUPPORT/ HYDROGEN_\1_SUPPORT/'
#grep -l -R 'include "config.h"' gui/ | xargs sed -i -e '/include "config.h"/d'

