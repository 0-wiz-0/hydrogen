#! /bin/bash

QTDIR=${QTDIR:-/usr/lib/qt}
VERBOSE=${VERBOSE:-0}
CMAKE_OPTIONS="-DWANT_DEBUG=1 -DWANT_JACK=1 -DWANT_ALSA=1 -DWANT_LIBARCHIVE=1 -DWANT_RUBBERBAND=1"
CMAKE_OPTIONS="${CMAKE_OPTIONS} -DWANT_OSS=1 -DWANT_PORTAUDIO=1 -DWANT_PORTMIDI=1 -DWANT_LASH=1 -DWANT_LRDF=1"
CMAKE_OPTIONS_="${CMAKE_OPTIONS} -DWANT_COREAUDIO=1 -DWANT_COREMIDI=1"
MAKE_OPTS="-j 2"
H2FLAGS="-V0xf"

find . -name '*~' -exec rm '{}' \;

function cmake_clean() {
    echo -e " * clean cmake files\n" && rm build/CMakeCache.txt 2>/dev/null
}

function cmake_rm() {
    echo -e " * rm cmake files\n" && rm -fr build 2>/dev/null
}

function cmake_make() {
    echo -e " * cmake make\n"
    if [ ! -d build ]; then
        mkdir build
    fi
    cd build
    if [ ! -e CMakeCache.txt ]; then
        cmake ${CMAKE_OPTIONS} .. || exit 1
    fi
    if [ $VERBOSE -eq 1 ]; then
        VERBOSE=1 make $MAKE_OPTS || exit 1
    else
        make $MAKE_OPTS || exit 1
    fi
    cd ..
}

function cmake_graph() {
    echo -e " * cmake graphviz\n"
    if [ ! -d build ]; then
        mkdir build
    fi
    cd build && cmake --graphviz=cmake.dot .. && dot -Tpng -o cmake_dep.png cmake.dot && cd ..
}

function cmake_doc() {
    if [ -d build ]; then
        cd build && make doc && cd ..
    fi
}

function cmake_help() {
    echo -e " * cmake help\n"
    if [ ! -d build ]; then
        mkdir build
    fi
    cd build && cmake -L .. && cd ..
}

function cmake_exec() {
    echo -e " * execute hydrogen\n" && ./build/gui/hydrogen $H2FLAGS
}

if [ $# -eq 0 ]; then
    echo "usage $0 [cmds list]"
    echo "cmds may be"
    echo "   r or rm     => all built, temp and cache files"
    echo "   c or clean  => remove cache files"
    echo "   m or make   => launch the build process"
    echo "   d or doc    => build html documentation"
    echo "   g or graph  => draw a dependecies graph"
    echo "   h or help   => show the build options"
    echo "   x or exec   => execute hydrogen"
    echo "ex: ./tool/cmake r m x"
    exit 1
fi

for arg in $@; do
    case $arg in
        "c")
            cmd="cmake_clean"
            ;;
        "clean")
            cmd="cmake_${arg}"
            ;;
        "r")
            cmd="cmake_rm"
            ;;
        "rm")
            cmd="cmake_${arg}"
            ;;
        "m")
            cmd="cmake_make"
            ;;
        "make")
            cmd="cmake_${arg}"
            ;;
        "g")
            cmd="cmake_graph"
            ;;
        "graph")
            cmd="cmake_${arg}"
            ;;
        "d")
            cmd="cmake_doc"
            ;;
        "doc")
            cmd="cmake_${doc}"
            ;;
        "h")
            cmd="cmake_help"
            ;;
        "help")
            cmd="cmake_${arg}"
            ;;
        "x")
            cmd="cmake_exec"
            ;;
        "exec")
            cmd="cmake_${arg}"
            ;;
        *)
         echo "unknown command ${arg}" && exit 1
     esac
     $cmd
done
